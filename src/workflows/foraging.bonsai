<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.7.1"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:scr="clr-namespace:Bonsai.Scripting.Expressions;assembly=Bonsai.Scripting.Expressions"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns:harp="clr-namespace:Bonsai.Harp;assembly=Bonsai.Harp"
                 xmlns:wie="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input"
                 xmlns:cf="clr-namespace:Bonsai.Harp.CF;assembly=Bonsai.Harp.CF"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:osc="clr-namespace:Bonsai.Osc;assembly=Bonsai.Osc"
                 xmlns:al="clr-namespace:Bonsai.Audio;assembly=Bonsai.Audio"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:dsp="clr-namespace:Bonsai.Dsp;assembly=Bonsai.Dsp"
                 xmlns:mx="clr-namespace:Bonsai.DAQmx;assembly=Bonsai.DAQmx"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="SubscribeSubject">
        <Name>Start</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>ResponseTime</Name>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>TimeSpan.fromSeconds(it)</scr:Expression>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="DueTime" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>ITI</Name>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>TimeSpan.fromSeconds(it)</scr:Expression>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="DueTime" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>ITI</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="ipy:PythonSelectMany">
              <ipy:Name>StartATrial</ipy:Name>
              <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DueTime" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Delay">
                <rx:DueTime>PT0.2S</rx:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="4" Label="Source1" />
            <Edge From="3" To="4" Label="Source2" />
            <Edge From="4" To="5" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="MulticastSubject">
        <Name>TrialStart</Name>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>DelayTime</Name>
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>TimeSpan.fromSeconds(it)</scr:Expression>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="DueTime" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>DelayPeriod</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Licks</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>false</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DueTime" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Delay">
                <rx:DueTime>PT0.2S</rx:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="BooleanProperty">
                <Value>true</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>No Licks</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Repeat" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="6" Label="Source2" />
            <Edge From="2" To="4" Label="Source1" />
            <Edge From="3" To="4" Label="Source2" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="MulticastSubject">
        <Name>GoCue</Name>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>ResponseInterval</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Licks</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="DueTime" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Timer">
                <rx:DueTime>PT0.1S</rx:DueTime>
                <rx:Period>PT0S</rx:Period>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>NoResponse</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Take">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="4" Label="Source2" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Reward</Name>
        <Description>Reward</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>LickLeft</Name>
              <Description>Success</Description>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="StringProperty">
                      <Value>Left</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="StringProperty">
                      <Value>Left</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>LickLeftCorrect</Name>
              <Description />
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>LeftReward</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="StringProperty">
                      <Value>Left</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>RewardDeliveryLeft</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>RewardLeft</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>LickLeftError</Name>
              <Description />
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>LeftReward</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="NotEqual">
                    <Operand xsi:type="StringProperty">
                      <Value>Left</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>ErrorLeft</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>LickRight</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="StringProperty">
                      <Value>Right</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="StringProperty">
                      <Value>Right</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>LickRightCorrect</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RightReward</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="StringProperty">
                      <Value>Right</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>RewardDeliveryRight</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>RewardRight</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>LickRightError</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>RightReward</Name>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="NotEqual">
                    <Operand xsi:type="StringProperty">
                      <Value>Right</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>ErrorRight</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>Miss</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="StringProperty">
                      <Value>NoResponse</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="PropertyMapping">
                    <PropertyMappings>
                      <Property Name="Value" />
                    </PropertyMappings>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="StringProperty">
                      <Value>NoResponse</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="3" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>NoResponse</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="0" To="7" Label="Source1" />
            <Edge From="0" To="13" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="1" To="5" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="15" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="15" Label="Source2" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="7" To="11" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="15" Label="Source4" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="15" Label="Source3" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source5" />
            <Edge From="15" To="16" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="MulticastSubject">
        <Name>RewardOutcome</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Repeat" />
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>HardwareInputs</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="harp:HarpMessage">
              <rx:Name>BehaviorCommands</rx:Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="harp:Device">
                <harp:DeviceState>Active</harp:DeviceState>
                <harp:DumpRegisters>true</harp:DumpRegisters>
                <harp:LedState>On</harp:LedState>
                <harp:VisualIndicators>On</harp:VisualIndicators>
                <harp:Heartbeat>Disable</harp:Heartbeat>
                <harp:IgnoreErrors>false</harp:IgnoreErrors>
                <harp:PortName>COM4</harp:PortName>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>BehaviorEvents</Name>
            </Expression>
            <Expression xsi:type="harp:Parse">
              <harp:Type>Timestamp</harp:Type>
              <harp:IsArray>false</harp:IsArray>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>Timestamps</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="wie:KeyDown">
                <wie:Filter>L</wie:Filter>
                <wie:SuppressRepetitions>false</wie:SuppressRepetitions>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>LeftKeyPress</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>Left</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="wie:KeyDown">
                <wie:Filter>R</wie:Filter>
                <wie:SuppressRepetitions>false</wie:SuppressRepetitions>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>RightKeyPress</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>Right</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>BehaviorEvents</Name>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>IgnoreAnalog</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Address</Selector>
                  </Expression>
                  <Expression xsi:type="NotEqual">
                    <Operand xsi:type="IntProperty">
                      <Value>44</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>LeftLick</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="cf:BehaviorEvent">
                    <cf:Type>Input</cf:Type>
                    <cf:Mask>Port1</cf:Mask>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="harp:Parse">
              <harp:Type>Timestamp</harp:Type>
              <harp:IsArray>false</harp:IsArray>
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>LickLeft.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>None</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>LeftLickTime</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>Left</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>RightLick</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="cf:BehaviorEvent">
                    <cf:Type>Input</cf:Type>
                    <cf:Mask>Port0</cf:Mask>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="harp:Parse">
              <harp:Type>Timestamp</harp:Type>
              <harp:IsArray>false</harp:IsArray>
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>LickRight.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>None</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>RightLickTime</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>Right</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>Licks</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="23" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="23" Label="Source2" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="12" To="18" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="17" To="23" Label="Source3" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
            <Edge From="20" To="21" Label="Source1" />
            <Edge From="21" To="22" Label="Source1" />
            <Edge From="22" To="23" Label="Source4" />
            <Edge From="23" To="24" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Hardware Outputs</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>TrialStart</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Timestamps</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>TrialStarts.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>None</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
            <Expression xsi:type="osc:SendMessage">
              <osc:Connection>BonsaiOSC</osc:Connection>
              <osc:Address>/TrialStartTime</osc:Address>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RewardDeliveryLeft</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Timestamps</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>RewardsL.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>None</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
            <Expression xsi:type="osc:SendMessage">
              <osc:Connection>BonsaiOSC2</osc:Connection>
              <osc:Address>/RewardDeliveryTime</osc:Address>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RewardDeliveryRight</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Timestamps</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>RewardsR.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>None</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
            <Expression xsi:type="osc:SendMessage">
              <osc:Connection>BonsaiOSC2</osc:Connection>
              <osc:Address>/RewardDeliveryTime</osc:Address>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>GoCue</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Timestamps</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>GoCue.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>None</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
            <Expression xsi:type="osc:SendMessage">
              <osc:Connection>BonsaiOSC3</osc:Connection>
              <osc:Address>/GoCueTime</osc:Address>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RewardOutcome</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Timestamps</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>RewardOutcome.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>None</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
            <Expression xsi:type="osc:SendMessage">
              <osc:Connection>BonsaiOSC</osc:Connection>
              <osc:Address>/TrialEndTime</osc:Address>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>LeftKeyPress</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Timestamps</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>LeftKeyPress.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>None</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>LeftPressTime</Name>
            </Expression>
            <Expression xsi:type="osc:SendMessage">
              <osc:Connection>BonsaiOSC2</osc:Connection>
              <osc:Address>/LeftLickTime</osc:Address>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RightKeyPress</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Timestamps</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:WithLatestFrom" />
            </Expression>
            <Expression xsi:type="MemberSelector">
              <Selector>Item2</Selector>
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>RightKeyPress.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>None</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>RightPressTime</Name>
            </Expression>
            <Expression xsi:type="osc:SendMessage">
              <osc:Connection>BonsaiOSC2</osc:Connection>
              <osc:Address>/RightLickTime</osc:Address>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>GoCue</Name>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>Play sound</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="al:AudioReader">
                      <al:FileName>bell.wav</al:FileName>
                      <al:BufferLength>10</al:BufferLength>
                      <al:SampleRate>0</al:SampleRate>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="al:AudioPlayback">
                      <al:SampleRate>44100</al:SampleRate>
                      <al:State>Playing</al:State>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="BooleanProperty">
                      <Value>true</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="cf:BehaviorCommand">
                    <cf:Type>SetOutput</cf:Type>
                    <cf:Mask>Port0</cf:Mask>
                  </Expression>
                  <Expression xsi:type="MulticastSubject">
                    <Name>BehaviorCommands</Name>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RewardDeliveryLeft</Name>
            </Expression>
            <Expression xsi:type="cf:BehaviorCommand">
              <cf:Type>ToggleOutput</cf:Type>
              <cf:Mask>Poke0Valve</cf:Mask>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>BehaviorCommands</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RewardDeliveryRight</Name>
            </Expression>
            <Expression xsi:type="cf:BehaviorCommand">
              <cf:Type>ToggleOutput</cf:Type>
              <cf:Mask>Poke1Valve</cf:Mask>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>BehaviorCommands</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>TrialStart</Name>
            </Expression>
            <Expression xsi:type="cf:BehaviorCommand">
              <cf:Type>ClearOutput</cf:Type>
              <cf:Mask>Port0</cf:Mask>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>BehaviorCommands</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>GoCue</Name>
            </Expression>
            <Expression xsi:type="cf:BehaviorCommand">
              <cf:Type>SetOutput</cf:Type>
              <cf:Mask>Port0</cf:Mask>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>BehaviorCommands</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>1000</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="cf:BehaviorCommand">
              <cf:Type>PulsePeriod</cf:Type>
              <cf:Mask>Poke1Valve</cf:Mask>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>BehaviorCommands</Name>
            </Expression>
            <Expression xsi:type="cf:BehaviorCommand">
              <cf:Type>ClearOutput</cf:Type>
              <cf:Mask>Poke1Led</cf:Mask>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>BehaviorCommands</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="IntProperty">
                <Value>1000</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="cf:BehaviorCommand">
              <cf:Type>PulsePeriod</cf:Type>
              <cf:Mask>Poke0Valve</cf:Mask>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>BehaviorCommands</Name>
            </Expression>
            <Expression xsi:type="cf:BehaviorCommand">
              <cf:Type>ClearOutput</cf:Type>
              <cf:Mask>Poke0Led</cf:Mask>
            </Expression>
            <Expression xsi:type="MulticastSubject">
              <Name>BehaviorCommands</Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Boolean">
              <rx:Name>GoCue</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:Boolean">
              <rx:Name>TrialStart</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:String">
              <rx:Name>RewardDeliveryLeft</rx:Name>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:String">
              <rx:Name>RewardDeliveryRight</rx:Name>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="osc:SendMessage">
                <osc:Connection>BonsaiOSC2</osc:Connection>
                <osc:Address>/RewardDeliveryRightTime</osc:Address>
              </Builder>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="8" Label="Source1" />
            <Edge From="7" To="8" Label="Source2" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="12" To="14" Label="Source1" />
            <Edge From="13" To="14" Label="Source2" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="18" To="20" Label="Source1" />
            <Edge From="19" To="20" Label="Source2" />
            <Edge From="20" To="21" Label="Source1" />
            <Edge From="21" To="22" Label="Source1" />
            <Edge From="22" To="23" Label="Source1" />
            <Edge From="24" To="26" Label="Source1" />
            <Edge From="25" To="26" Label="Source2" />
            <Edge From="26" To="27" Label="Source1" />
            <Edge From="27" To="28" Label="Source1" />
            <Edge From="28" To="29" Label="Source1" />
            <Edge From="30" To="32" Label="Source1" />
            <Edge From="31" To="32" Label="Source2" />
            <Edge From="32" To="33" Label="Source1" />
            <Edge From="33" To="34" Label="Source1" />
            <Edge From="34" To="35" Label="Source1" />
            <Edge From="35" To="36" Label="Source1" />
            <Edge From="37" To="39" Label="Source1" />
            <Edge From="38" To="39" Label="Source2" />
            <Edge From="39" To="40" Label="Source1" />
            <Edge From="40" To="41" Label="Source1" />
            <Edge From="41" To="42" Label="Source1" />
            <Edge From="42" To="43" Label="Source1" />
            <Edge From="44" To="45" Label="Source1" />
            <Edge From="46" To="47" Label="Source1" />
            <Edge From="47" To="48" Label="Source1" />
            <Edge From="49" To="50" Label="Source1" />
            <Edge From="50" To="51" Label="Source1" />
            <Edge From="52" To="53" Label="Source1" />
            <Edge From="53" To="54" Label="Source1" />
            <Edge From="55" To="56" Label="Source1" />
            <Edge From="56" To="57" Label="Source1" />
            <Edge From="58" To="59" Label="Source1" />
            <Edge From="59" To="60" Label="Source1" />
            <Edge From="60" To="61" Label="Source1" />
            <Edge From="61" To="62" Label="Source1" />
            <Edge From="63" To="64" Label="Source1" />
            <Edge From="64" To="65" Label="Source1" />
            <Edge From="65" To="66" Label="Source1" />
            <Edge From="66" To="67" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Parameters</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="osc:CreateTcpServer">
                <osc:Name>BonsaiOSC</osc:Name>
                <osc:Port>4002</osc:Port>
                <osc:NoDelay>false</osc:NoDelay>
                <osc:AllowNatTraversal>true</osc:AllowNatTraversal>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="osc:CreateTcpServer">
                <osc:Name>BonsaiOSC2</osc:Name>
                <osc:Port>4003</osc:Port>
                <osc:NoDelay>false</osc:NoDelay>
                <osc:AllowNatTraversal>true</osc:AllowNatTraversal>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="osc:CreateTcpServer">
                <osc:Name>BonsaiOSC3</osc:Name>
                <osc:Port>4004</osc:Port>
                <osc:NoDelay>false</osc:NoDelay>
                <osc:AllowNatTraversal>true</osc:AllowNatTraversal>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="osc:CreateTcpServer">
                <osc:Name>BonsaiOSC4</osc:Name>
                <osc:Port>4005</osc:Port>
                <osc:NoDelay>false</osc:NoDelay>
                <osc:AllowNatTraversal>true</osc:AllowNatTraversal>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject" TypeArguments="sys:String">
              <rx:Name>RewardOutcome</rx:Name>
            </Expression>
            <Expression xsi:type="osc:SendMessage">
              <osc:Connection>BonsaiOSC</osc:Connection>
              <osc:Address>/TrialEnd</osc:Address>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/Left_Bait</osc:Address>
              <osc:TypeTag>i</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="ipy:PythonSelectMany">
              <ipy:Name>LeftTrialProbability</ipy:Name>
              <ipy:Script>import random

@returns(str)
def process(value):

  if value ==1:
     v = "Left"
  else:
     v = "NoReward"
  yield v
</ipy:Script>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>LeftReward</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/Right_Bait</osc:Address>
              <osc:TypeTag>i</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="ipy:PythonSelectMany">
              <ipy:Name>RightTrialProbability</ipy:Name>
              <ipy:Script>import random

@returns(str)
def process(value):

  if value==1:
     v = "Right"
  else:
     v = "NoReward"
  yield v</ipy:Script>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>RightReward</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/start</osc:Address>
              <osc:TypeTag>i</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>Start</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/ITI</osc:Address>
              <osc:TypeTag>f</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>ITI</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/DelayTime</osc:Address>
              <osc:TypeTag>f</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>DelayTime</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/ResponseTime</osc:Address>
              <osc:TypeTag>f</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>ResponseTime</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>LeftLickTime</Name>
            </Expression>
            <Expression xsi:type="osc:SendMessage">
              <osc:Connection>BonsaiOSC2</osc:Connection>
              <osc:Address>/LeftLickTime</osc:Address>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>RightLickTime</Name>
            </Expression>
            <Expression xsi:type="osc:SendMessage">
              <osc:Connection>BonsaiOSC2</osc:Connection>
              <osc:Address>/RightLickTime</osc:Address>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="SubscribeSubject">
                <Name>LeftPressTime</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="osc:SendMessage">
                <osc:Connection>BonsaiOSC2</osc:Connection>
                <osc:Address>/LeftLickTime</osc:Address>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="SubscribeSubject">
                <Name>RightPressTime</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="osc:SendMessage">
                <osc:Connection>BonsaiOSC2</osc:Connection>
                <osc:Address>/RightLickTime</osc:Address>
              </Builder>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/WaveForm1_1</osc:Address>
              <osc:TypeTag>s</osc:TypeTag>
              <osc:Connection>BonsaiOSC4</osc:Connection>
            </Expression>
            <Expression xsi:type="Parse">
              <Pattern>%f</Pattern>
              <Separator>, </Separator>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:AsyncSubject">
                <Name>WaveForm1_1</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>WaveForm1_1</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/WaveForm2_1</osc:Address>
              <osc:TypeTag>s</osc:TypeTag>
              <osc:Connection>BonsaiOSC4</osc:Connection>
            </Expression>
            <Expression xsi:type="Parse">
              <Pattern>%f</Pattern>
              <Separator>,</Separator>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:AsyncSubject">
                <Name>WaveForm2_1</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>WaveForm2_1</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/WaveForm1_2</osc:Address>
              <osc:TypeTag>s</osc:TypeTag>
              <osc:Connection>BonsaiOSC4</osc:Connection>
            </Expression>
            <Expression xsi:type="Parse">
              <Pattern>%f</Pattern>
              <Separator>,</Separator>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:AsyncSubject">
                <Name>WaveForm1_2</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>WaveForm1_2</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/WaveForm2_2</osc:Address>
              <osc:TypeTag>s</osc:TypeTag>
              <osc:Connection>BonsaiOSC4</osc:Connection>
            </Expression>
            <Expression xsi:type="Parse">
              <Pattern>%f</Pattern>
              <Separator>,</Separator>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:AsyncSubject">
                <Name>WaveForm2_2</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>WaveForm2_2</Name>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="osc:ReceiveMessage">
                <osc:Address>/Size1_1</osc:Address>
                <osc:TypeTag>s</osc:TypeTag>
                <osc:Connection>BonsaiOSC4</osc:Connection>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Parse">
                <Pattern>%f</Pattern>
                <Separator>, </Separator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>Size1_1</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="osc:ReceiveMessage">
                <osc:Address>/Size1_2</osc:Address>
                <osc:TypeTag>s</osc:TypeTag>
                <osc:Connection>BonsaiOSC4</osc:Connection>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Parse">
                <Pattern>%f</Pattern>
                <Separator>, </Separator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>Size1_2</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="osc:ReceiveMessage">
                <osc:Address>/Size2_1</osc:Address>
                <osc:TypeTag>s</osc:TypeTag>
                <osc:Connection>BonsaiOSC4</osc:Connection>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Parse">
                <Pattern>%f</Pattern>
                <Separator>, </Separator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>Size2_1</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="osc:ReceiveMessage">
                <osc:Address>/Size2_2</osc:Address>
                <osc:TypeTag>s</osc:TypeTag>
                <osc:Connection>BonsaiOSC4</osc:Connection>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Parse">
                <Pattern>%f</Pattern>
                <Separator>, </Separator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="rx:PublishSubject">
                <Name>Size2_2</Name>
              </Builder>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/TriggerITIStart_Wave1</osc:Address>
              <osc:TypeTag>i</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>TriggerITIStart_Wave1</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/TriggerITIStart_Wave2</osc:Address>
              <osc:TypeTag>i</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>TriggerITIStart_Wave2</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/Trigger_Location1</osc:Address>
              <osc:TypeTag>i</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>Trigger_Location1</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/Trigger_Location2</osc:Address>
              <osc:TypeTag>i</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>Trigger_Location2</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/TriggerGoCue_Wave1</osc:Address>
              <osc:TypeTag>i</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>TriggerGoCue_Wave1</Name>
            </Expression>
            <Expression xsi:type="osc:ReceiveMessage">
              <osc:Address>/TriggerGoCue_Wave2</osc:Address>
              <osc:TypeTag>i</osc:TypeTag>
              <osc:Connection>BonsaiOSC</osc:Connection>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>TriggerGoCue_Wave2</Name>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="14" To="15" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="20" To="21" Label="Source1" />
            <Edge From="22" To="23" Label="Source1" />
            <Edge From="24" To="25" Label="Source1" />
            <Edge From="26" To="27" Label="Source1" />
            <Edge From="28" To="29" Label="Source1" />
            <Edge From="29" To="30" Label="Source1" />
            <Edge From="30" To="31" Label="Source1" />
            <Edge From="32" To="33" Label="Source1" />
            <Edge From="33" To="34" Label="Source1" />
            <Edge From="34" To="35" Label="Source1" />
            <Edge From="36" To="37" Label="Source1" />
            <Edge From="37" To="38" Label="Source1" />
            <Edge From="38" To="39" Label="Source1" />
            <Edge From="40" To="41" Label="Source1" />
            <Edge From="41" To="42" Label="Source1" />
            <Edge From="42" To="43" Label="Source1" />
            <Edge From="44" To="45" Label="Source1" />
            <Edge From="45" To="46" Label="Source1" />
            <Edge From="47" To="48" Label="Source1" />
            <Edge From="48" To="49" Label="Source1" />
            <Edge From="50" To="51" Label="Source1" />
            <Edge From="51" To="52" Label="Source1" />
            <Edge From="53" To="54" Label="Source1" />
            <Edge From="54" To="55" Label="Source1" />
            <Edge From="56" To="57" Label="Source1" />
            <Edge From="58" To="59" Label="Source1" />
            <Edge From="60" To="61" Label="Source1" />
            <Edge From="62" To="63" Label="Source1" />
            <Edge From="64" To="65" Label="Source1" />
            <Edge From="66" To="67" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="dsp:FunctionGenerator">
            <dsp:BufferLength>4410</dsp:BufferLength>
            <dsp:Frequency>10</dsp:Frequency>
            <dsp:Waveform>Sine</dsp:Waveform>
            <dsp:SampleRate>44100</dsp:SampleRate>
            <dsp:Amplitude>1</dsp:Amplitude>
            <dsp:Offset>0</dsp:Offset>
            <dsp:Phase>0</dsp:Phase>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="mx:AnalogOutput">
            <mx:SignalSource />
            <mx:SampleRate>5000</mx:SampleRate>
            <mx:ActiveEdge>Rising</mx:ActiveEdge>
            <mx:SampleMode>ContinuousSamples</mx:SampleMode>
            <mx:BufferSize>100000</mx:BufferSize>
            <mx:Channels>
              <mx:AnalogOutputChannelConfiguration>
                <mx:ChannelName>Out</mx:ChannelName>
                <mx:MinimumValue>-10</mx:MinimumValue>
                <mx:MaximumValue>10</mx:MaximumValue>
                <mx:PhysicalChannel>Dev1/ao0</mx:PhysicalChannel>
                <mx:VoltageUnits>Volts</mx:VoltageUnits>
              </mx:AnalogOutputChannelConfiguration>
            </mx:Channels>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Size1_1</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="dsp:ConvertFromArray">
            <dsp:Size>
              <dsp:Width>2</dsp:Width>
              <dsp:Height>1</dsp:Height>
            </dsp:Size>
            <dsp:Depth>F32</dsp:Depth>
            <dsp:Channels>1</dsp:Channels>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Size" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>Start</Name>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>TriggerITI_Wave1</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>TriggerITIStart_Wave1</Name>
            </Expression>
            <Expression xsi:type="ipy:PythonSelectMany">
              <ipy:Name>StartTrigger</ipy:Name>
              <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>Trigger_Location1</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Trigger_Location1</Name>
            </Expression>
            <Expression xsi:type="ipy:PythonSelectMany">
              <ipy:Name>StartTrigger</ipy:Name>
              <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>Wave1_Location1</Name>
        <Description />
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>WaveForm1_1</Name>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="ExternalizedMapping">
                <Property Name="Size" />
              </Builder>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dsp:ConvertFromArray">
                <dsp:Size>
                  <dsp:Width>25000</dsp:Width>
                  <dsp:Height>1</dsp:Height>
                </dsp:Size>
                <dsp:Depth>F32</dsp:Depth>
                <dsp:Channels>1</dsp:Channels>
              </Combinator>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="mx:AnalogOutput">
                  <mx:SignalSource />
                  <mx:SampleRate>5000</mx:SampleRate>
                  <mx:ActiveEdge>Rising</mx:ActiveEdge>
                  <mx:SampleMode>ContinuousSamples</mx:SampleMode>
                  <mx:BufferSize>25000</mx:BufferSize>
                  <mx:Channels>
                    <mx:AnalogOutputChannelConfiguration>
                      <mx:ChannelName>Out</mx:ChannelName>
                      <mx:MinimumValue>-10</mx:MinimumValue>
                      <mx:MaximumValue>10</mx:MaximumValue>
                      <mx:PhysicalChannel>Dev1/ao0</mx:PhysicalChannel>
                      <mx:VoltageUnits>Volts</mx:VoltageUnits>
                    </mx:AnalogOutputChannelConfiguration>
                  </mx:Channels>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="IntProperty">
                  <Value>1</Value>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="osc:SendMessage">
                <osc:Connection>BonsaiOSC4</osc:Connection>
                <osc:Address>/FinishOfWave1_1</osc:Address>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="WorkflowOutput" />
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>Trigger_Location2</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>Trigger_Location2</Name>
            </Expression>
            <Expression xsi:type="ipy:PythonSelectMany">
              <ipy:Name>StartTrigger</ipy:Name>
              <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="2" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Size1_2</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="dsp:ConvertFromArray">
            <dsp:Size>
              <dsp:Width>2</dsp:Width>
              <dsp:Height>1</dsp:Height>
            </dsp:Size>
            <dsp:Depth>F32</dsp:Depth>
            <dsp:Channels>1</dsp:Channels>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Size" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="rx:SelectMany">
        <Name>Wave1_Location2</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>WaveForm1_2</Name>
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="Size" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="dsp:ConvertFromArray">
                <dsp:Size>
                  <dsp:Width>25000</dsp:Width>
                  <dsp:Height>1</dsp:Height>
                </dsp:Size>
                <dsp:Depth>F32</dsp:Depth>
                <dsp:Channels>1</dsp:Channels>
              </Combinator>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="mx:AnalogOutput">
                  <mx:SignalSource />
                  <mx:SampleRate>5000</mx:SampleRate>
                  <mx:ActiveEdge>Rising</mx:ActiveEdge>
                  <mx:SampleMode>ContinuousSamples</mx:SampleMode>
                  <mx:BufferSize>100000</mx:BufferSize>
                  <mx:Channels>
                    <mx:AnalogOutputChannelConfiguration>
                      <mx:ChannelName>Out</mx:ChannelName>
                      <mx:MinimumValue>-10</mx:MinimumValue>
                      <mx:MaximumValue>10</mx:MaximumValue>
                      <mx:PhysicalChannel>Dev1/ao1</mx:PhysicalChannel>
                      <mx:VoltageUnits>Volts</mx:VoltageUnits>
                    </mx:AnalogOutputChannelConfiguration>
                  </mx:Channels>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="Combinator">
                <Combinator xsi:type="IntProperty">
                  <Value>1</Value>
                </Combinator>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="osc:SendMessage">
                <osc:Connection>BonsaiOSC4</osc:Connection>
                <osc:Address>/FinishOfWave1_2</osc:Address>
              </Builder>
            </Expression>
            <Expression xsi:type="Disable">
              <Builder xsi:type="WorkflowOutput" />
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Size1_1</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="dsp:ConvertFromArray">
            <dsp:Size>
              <dsp:Width>2</dsp:Width>
              <dsp:Height>1</dsp:Height>
            </dsp:Size>
            <dsp:Depth>F32</dsp:Depth>
            <dsp:Channels>1</dsp:Channels>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Size" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Start</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>TriggerITI_Wave2</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>TriggerITIStart_Wave2</Name>
              </Expression>
              <Expression xsi:type="ipy:PythonSelectMany">
                <ipy:Name>StartTrigger</ipy:Name>
                <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Trigger_Location1</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>Trigger_Location1</Name>
              </Expression>
              <Expression xsi:type="ipy:PythonSelectMany">
                <ipy:Name>StartTrigger</ipy:Name>
                <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Wave2_Location1</Name>
          <Description />
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>WaveForm2_1</Name>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="ExternalizedMapping">
                  <Property Name="Size" />
                </Builder>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="dsp:ConvertFromArray">
                  <dsp:Size>
                    <dsp:Width>25000</dsp:Width>
                    <dsp:Height>1</dsp:Height>
                  </dsp:Size>
                  <dsp:Depth>F32</dsp:Depth>
                  <dsp:Channels>1</dsp:Channels>
                </Combinator>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="mx:AnalogOutput">
                    <mx:SignalSource />
                    <mx:SampleRate>5000</mx:SampleRate>
                    <mx:ActiveEdge>Rising</mx:ActiveEdge>
                    <mx:SampleMode>ContinuousSamples</mx:SampleMode>
                    <mx:BufferSize>100000</mx:BufferSize>
                    <mx:Channels>
                      <mx:AnalogOutputChannelConfiguration>
                        <mx:ChannelName>Out</mx:ChannelName>
                        <mx:MinimumValue>-10</mx:MinimumValue>
                        <mx:MaximumValue>10</mx:MaximumValue>
                        <mx:PhysicalChannel>Dev1/ao0</mx:PhysicalChannel>
                        <mx:VoltageUnits>Volts</mx:VoltageUnits>
                      </mx:AnalogOutputChannelConfiguration>
                    </mx:Channels>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="IntProperty">
                    <Value>1</Value>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="osc:SendMessage">
                  <osc:Connection>BonsaiOSC4</osc:Connection>
                  <osc:Address>/FinishOfWave1_1</osc:Address>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="WorkflowOutput" />
              </Expression>
            </Nodes>
            <Edges>
              <Edge From="0" To="2" Label="Source1" />
              <Edge From="1" To="2" Label="Source2" />
              <Edge From="2" To="3" Label="Source1" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="5" Label="Source1" />
              <Edge From="5" To="6" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Trigger_Location2</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>Trigger_Location2</Name>
              </Expression>
              <Expression xsi:type="ipy:PythonSelectMany">
                <ipy:Name>StartTrigger</ipy:Name>
                <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Size1_2</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="dsp:ConvertFromArray">
            <dsp:Size>
              <dsp:Width>2</dsp:Width>
              <dsp:Height>1</dsp:Height>
            </dsp:Size>
            <dsp:Depth>F32</dsp:Depth>
            <dsp:Channels>1</dsp:Channels>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Size" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Wave2_Location2</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>WaveForm2_2</Name>
              </Expression>
              <Expression xsi:type="ExternalizedMapping">
                <Property Name="Size" />
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="dsp:ConvertFromArray">
                  <dsp:Size>
                    <dsp:Width>25000</dsp:Width>
                    <dsp:Height>1</dsp:Height>
                  </dsp:Size>
                  <dsp:Depth>F32</dsp:Depth>
                  <dsp:Channels>1</dsp:Channels>
                </Combinator>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="mx:AnalogOutput">
                    <mx:SignalSource />
                    <mx:SampleRate>5000</mx:SampleRate>
                    <mx:ActiveEdge>Rising</mx:ActiveEdge>
                    <mx:SampleMode>ContinuousSamples</mx:SampleMode>
                    <mx:BufferSize>100000</mx:BufferSize>
                    <mx:Channels>
                      <mx:AnalogOutputChannelConfiguration>
                        <mx:ChannelName>Out</mx:ChannelName>
                        <mx:MinimumValue>-10</mx:MinimumValue>
                        <mx:MaximumValue>10</mx:MaximumValue>
                        <mx:PhysicalChannel>Dev1/ao1</mx:PhysicalChannel>
                        <mx:VoltageUnits>Volts</mx:VoltageUnits>
                      </mx:AnalogOutputChannelConfiguration>
                    </mx:Channels>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="IntProperty">
                    <Value>1</Value>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="osc:SendMessage">
                  <osc:Connection>BonsaiOSC4</osc:Connection>
                  <osc:Address>/FinishOfWave1_2</osc:Address>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="WorkflowOutput" />
              </Expression>
            </Nodes>
            <Edges>
              <Edge From="0" To="2" Label="Source1" />
              <Edge From="1" To="2" Label="Source2" />
              <Edge From="2" To="3" Label="Source1" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="5" Label="Source1" />
              <Edge From="5" To="6" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Size1_1</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="dsp:ConvertFromArray">
            <dsp:Size>
              <dsp:Width>2</dsp:Width>
              <dsp:Height>1</dsp:Height>
            </dsp:Size>
            <dsp:Depth>F32</dsp:Depth>
            <dsp:Channels>1</dsp:Channels>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Size" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>GoCue</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>TriggerGoCue_Wave1</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>TriggerGoCue_Wave1</Name>
              </Expression>
              <Expression xsi:type="ipy:PythonSelectMany">
                <ipy:Name>StartTrigger</ipy:Name>
                <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Trigger_Location1</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>Trigger_Location1</Name>
              </Expression>
              <Expression xsi:type="ipy:PythonSelectMany">
                <ipy:Name>StartTrigger</ipy:Name>
                <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Wave1_Location1</Name>
          <Description />
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>WaveForm1_1</Name>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="ExternalizedMapping">
                  <Property Name="Size" />
                </Builder>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="dsp:ConvertFromArray">
                  <dsp:Size>
                    <dsp:Width>25000</dsp:Width>
                    <dsp:Height>1</dsp:Height>
                  </dsp:Size>
                  <dsp:Depth>F32</dsp:Depth>
                  <dsp:Channels>1</dsp:Channels>
                </Combinator>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="mx:AnalogOutput">
                    <mx:SignalSource />
                    <mx:SampleRate>5000</mx:SampleRate>
                    <mx:ActiveEdge>Rising</mx:ActiveEdge>
                    <mx:SampleMode>ContinuousSamples</mx:SampleMode>
                    <mx:BufferSize>100000</mx:BufferSize>
                    <mx:Channels>
                      <mx:AnalogOutputChannelConfiguration>
                        <mx:ChannelName>Out</mx:ChannelName>
                        <mx:MinimumValue>-10</mx:MinimumValue>
                        <mx:MaximumValue>10</mx:MaximumValue>
                        <mx:PhysicalChannel>Dev1/ao0</mx:PhysicalChannel>
                        <mx:VoltageUnits>Volts</mx:VoltageUnits>
                      </mx:AnalogOutputChannelConfiguration>
                    </mx:Channels>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="IntProperty">
                    <Value>1</Value>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="osc:SendMessage">
                  <osc:Connection>BonsaiOSC4</osc:Connection>
                  <osc:Address>/FinishOfWave1_1</osc:Address>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="WorkflowOutput" />
              </Expression>
            </Nodes>
            <Edges>
              <Edge From="0" To="2" Label="Source1" />
              <Edge From="1" To="2" Label="Source2" />
              <Edge From="2" To="3" Label="Source1" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="5" Label="Source1" />
              <Edge From="5" To="6" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Trigger_Location2</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>Trigger_Location2</Name>
              </Expression>
              <Expression xsi:type="ipy:PythonSelectMany">
                <ipy:Name>StartTrigger</ipy:Name>
                <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Size1_2</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="dsp:ConvertFromArray">
            <dsp:Size>
              <dsp:Width>2</dsp:Width>
              <dsp:Height>1</dsp:Height>
            </dsp:Size>
            <dsp:Depth>F32</dsp:Depth>
            <dsp:Channels>1</dsp:Channels>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Size" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Wave1_Location2</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>WaveForm1_2</Name>
              </Expression>
              <Expression xsi:type="ExternalizedMapping">
                <Property Name="Size" />
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="dsp:ConvertFromArray">
                  <dsp:Size>
                    <dsp:Width>25000</dsp:Width>
                    <dsp:Height>1</dsp:Height>
                  </dsp:Size>
                  <dsp:Depth>F32</dsp:Depth>
                  <dsp:Channels>1</dsp:Channels>
                </Combinator>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="mx:AnalogOutput">
                    <mx:SignalSource />
                    <mx:SampleRate>5000</mx:SampleRate>
                    <mx:ActiveEdge>Rising</mx:ActiveEdge>
                    <mx:SampleMode>ContinuousSamples</mx:SampleMode>
                    <mx:BufferSize>100000</mx:BufferSize>
                    <mx:Channels>
                      <mx:AnalogOutputChannelConfiguration>
                        <mx:ChannelName>Out</mx:ChannelName>
                        <mx:MinimumValue>-10</mx:MinimumValue>
                        <mx:MaximumValue>10</mx:MaximumValue>
                        <mx:PhysicalChannel>Dev1/ao1</mx:PhysicalChannel>
                        <mx:VoltageUnits>Volts</mx:VoltageUnits>
                      </mx:AnalogOutputChannelConfiguration>
                    </mx:Channels>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="IntProperty">
                    <Value>1</Value>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="osc:SendMessage">
                  <osc:Connection>BonsaiOSC4</osc:Connection>
                  <osc:Address>/FinishOfWave1_2</osc:Address>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="WorkflowOutput" />
              </Expression>
            </Nodes>
            <Edges>
              <Edge From="0" To="2" Label="Source1" />
              <Edge From="1" To="2" Label="Source2" />
              <Edge From="2" To="3" Label="Source1" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="5" Label="Source1" />
              <Edge From="5" To="6" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Size1_1</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="dsp:ConvertFromArray">
            <dsp:Size>
              <dsp:Width>2</dsp:Width>
              <dsp:Height>1</dsp:Height>
            </dsp:Size>
            <dsp:Depth>F32</dsp:Depth>
            <dsp:Channels>1</dsp:Channels>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Size" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>GoCue</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>TriggerGoCue_Wave2</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>TriggerGoCue_Wave2</Name>
              </Expression>
              <Expression xsi:type="ipy:PythonSelectMany">
                <ipy:Name>StartTrigger</ipy:Name>
                <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Trigger_Location1</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>Trigger_Location1</Name>
              </Expression>
              <Expression xsi:type="ipy:PythonSelectMany">
                <ipy:Name>StartTrigger</ipy:Name>
                <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Wave2_Location1</Name>
          <Description />
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>WaveForm2_1</Name>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="ExternalizedMapping">
                  <Property Name="Size" />
                </Builder>
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="dsp:ConvertFromArray">
                  <dsp:Size>
                    <dsp:Width>25000</dsp:Width>
                    <dsp:Height>1</dsp:Height>
                  </dsp:Size>
                  <dsp:Depth>F32</dsp:Depth>
                  <dsp:Channels>1</dsp:Channels>
                </Combinator>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="mx:AnalogOutput">
                    <mx:SignalSource />
                    <mx:SampleRate>5000</mx:SampleRate>
                    <mx:ActiveEdge>Rising</mx:ActiveEdge>
                    <mx:SampleMode>ContinuousSamples</mx:SampleMode>
                    <mx:BufferSize>100000</mx:BufferSize>
                    <mx:Channels>
                      <mx:AnalogOutputChannelConfiguration>
                        <mx:ChannelName>Out</mx:ChannelName>
                        <mx:MinimumValue>-10</mx:MinimumValue>
                        <mx:MaximumValue>10</mx:MaximumValue>
                        <mx:PhysicalChannel>Dev1/ao0</mx:PhysicalChannel>
                        <mx:VoltageUnits>Volts</mx:VoltageUnits>
                      </mx:AnalogOutputChannelConfiguration>
                    </mx:Channels>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="IntProperty">
                    <Value>1</Value>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="osc:SendMessage">
                  <osc:Connection>BonsaiOSC4</osc:Connection>
                  <osc:Address>/FinishOfWave1_1</osc:Address>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="WorkflowOutput" />
              </Expression>
            </Nodes>
            <Edges>
              <Edge From="0" To="2" Label="Source1" />
              <Edge From="1" To="2" Label="Source2" />
              <Edge From="2" To="3" Label="Source1" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="5" Label="Source1" />
              <Edge From="5" To="6" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Trigger_Location2</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>Trigger_Location2</Name>
              </Expression>
              <Expression xsi:type="ipy:PythonSelectMany">
                <ipy:Name>StartTrigger</ipy:Name>
                <ipy:Script>import random

@returns(bool)
def process(value):

  if value ==1:
     v = True
  else:
     v = False

  yield v
</ipy:Script>
              </Expression>
              <Expression xsi:type="rx:Condition">
                <Workflow>
                  <Nodes>
                    <Expression xsi:type="WorkflowInput">
                      <Name>Source1</Name>
                    </Expression>
                    <Expression xsi:type="WorkflowOutput" />
                  </Nodes>
                  <Edges>
                    <Edge From="0" To="1" Label="Source1" />
                  </Edges>
                </Workflow>
              </Expression>
              <Expression xsi:type="WorkflowOutput" />
            </Nodes>
            <Edges>
              <Edge From="0" To="1" Label="Source1" />
              <Edge From="1" To="2" Label="Source1" />
              <Edge From="2" To="3" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="SubscribeSubject">
          <Name>Size1_2</Name>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="Combinator">
          <Combinator xsi:type="dsp:ConvertFromArray">
            <dsp:Size>
              <dsp:Width>2</dsp:Width>
              <dsp:Height>1</dsp:Height>
            </dsp:Size>
            <dsp:Depth>F32</dsp:Depth>
            <dsp:Channels>1</dsp:Channels>
          </Combinator>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="PropertyMapping">
          <PropertyMappings>
            <Property Name="Size" />
          </PropertyMappings>
        </Builder>
      </Expression>
      <Expression xsi:type="Disable">
        <Builder xsi:type="rx:SelectMany">
          <Name>Wave2_Location2</Name>
          <Workflow>
            <Nodes>
              <Expression xsi:type="SubscribeSubject">
                <Name>WaveForm2_2</Name>
              </Expression>
              <Expression xsi:type="ExternalizedMapping">
                <Property Name="Size" />
              </Expression>
              <Expression xsi:type="Combinator">
                <Combinator xsi:type="dsp:ConvertFromArray">
                  <dsp:Size>
                    <dsp:Width>25000</dsp:Width>
                    <dsp:Height>1</dsp:Height>
                  </dsp:Size>
                  <dsp:Depth>F32</dsp:Depth>
                  <dsp:Channels>1</dsp:Channels>
                </Combinator>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="mx:AnalogOutput">
                    <mx:SignalSource />
                    <mx:SampleRate>5000</mx:SampleRate>
                    <mx:ActiveEdge>Rising</mx:ActiveEdge>
                    <mx:SampleMode>ContinuousSamples</mx:SampleMode>
                    <mx:BufferSize>100000</mx:BufferSize>
                    <mx:Channels>
                      <mx:AnalogOutputChannelConfiguration>
                        <mx:ChannelName>Out</mx:ChannelName>
                        <mx:MinimumValue>-10</mx:MinimumValue>
                        <mx:MaximumValue>10</mx:MaximumValue>
                        <mx:PhysicalChannel>Dev1/ao1</mx:PhysicalChannel>
                        <mx:VoltageUnits>Volts</mx:VoltageUnits>
                      </mx:AnalogOutputChannelConfiguration>
                    </mx:Channels>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="Combinator">
                  <Combinator xsi:type="IntProperty">
                    <Value>1</Value>
                  </Combinator>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="osc:SendMessage">
                  <osc:Connection>BonsaiOSC4</osc:Connection>
                  <osc:Address>/FinishOfWave1_2</osc:Address>
                </Builder>
              </Expression>
              <Expression xsi:type="Disable">
                <Builder xsi:type="WorkflowOutput" />
              </Expression>
            </Nodes>
            <Edges>
              <Edge From="0" To="2" Label="Source1" />
              <Edge From="1" To="2" Label="Source2" />
              <Edge From="2" To="3" Label="Source1" />
              <Edge From="3" To="4" Label="Source1" />
              <Edge From="4" To="5" Label="Source1" />
              <Edge From="5" To="6" Label="Source1" />
            </Edges>
          </Workflow>
        </Builder>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="7" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="3" Label="Source1" />
      <Edge From="3" To="14" Label="Source2" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source2" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="12" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source2" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="14" To="15" Label="Source1" />
      <Edge From="15" To="16" Label="Source1" />
      <Edge From="16" To="17" Label="Source1" />
      <Edge From="21" To="22" Label="Source1" />
      <Edge From="23" To="24" Label="Source1" />
      <Edge From="24" To="25" Label="Source1" />
      <Edge From="25" To="29" Label="Source2" />
      <Edge From="26" To="27" Label="Source1" />
      <Edge From="27" To="28" Label="Source1" />
      <Edge From="27" To="30" Label="Source1" />
      <Edge From="28" To="29" Label="Source1" />
      <Edge From="30" To="34" Label="Source1" />
      <Edge From="31" To="32" Label="Source1" />
      <Edge From="32" To="33" Label="Source1" />
      <Edge From="33" To="34" Label="Source2" />
      <Edge From="35" To="36" Label="Source1" />
      <Edge From="36" To="37" Label="Source1" />
      <Edge From="37" To="41" Label="Source2" />
      <Edge From="38" To="39" Label="Source1" />
      <Edge From="39" To="40" Label="Source1" />
      <Edge From="39" To="42" Label="Source1" />
      <Edge From="40" To="41" Label="Source1" />
      <Edge From="42" To="46" Label="Source1" />
      <Edge From="43" To="44" Label="Source1" />
      <Edge From="44" To="45" Label="Source1" />
      <Edge From="45" To="46" Label="Source2" />
      <Edge From="47" To="48" Label="Source1" />
      <Edge From="48" To="49" Label="Source1" />
      <Edge From="49" To="53" Label="Source2" />
      <Edge From="50" To="51" Label="Source1" />
      <Edge From="51" To="52" Label="Source1" />
      <Edge From="51" To="54" Label="Source1" />
      <Edge From="52" To="53" Label="Source1" />
      <Edge From="54" To="58" Label="Source1" />
      <Edge From="55" To="56" Label="Source1" />
      <Edge From="56" To="57" Label="Source1" />
      <Edge From="57" To="58" Label="Source2" />
      <Edge From="59" To="60" Label="Source1" />
      <Edge From="60" To="61" Label="Source1" />
      <Edge From="61" To="65" Label="Source2" />
      <Edge From="62" To="63" Label="Source1" />
      <Edge From="63" To="64" Label="Source1" />
      <Edge From="63" To="66" Label="Source1" />
      <Edge From="64" To="65" Label="Source1" />
      <Edge From="66" To="70" Label="Source1" />
      <Edge From="67" To="68" Label="Source1" />
      <Edge From="68" To="69" Label="Source1" />
      <Edge From="69" To="70" Label="Source2" />
    </Edges>
  </Workflow>
</WorkflowBuilder>