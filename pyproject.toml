[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "dynamic-foraging-task"
description = "Dynamic Foraging Task used at the Allen Institute for Neural Dynamics"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]
readme = "README.md"

dynamic = ["version"]

dependencies = [
    "numpy >=2, <3",
    "scipy >=1, <2",
    "matplotlib >=3, <4",
    "PyQt5 >=5, <6",
    "pandas >=2, <3",
    "pyserial >=3, <4",
    "pyOSC3@git+https://github.com/glopesdev/pyosc3.git@master",
    "newscale@git+https://github.com/AllenNeuralDynamics/python-newscale@axes-on-target",
    "aind-slims-api@git+https://github.com/AllenNeuralDynamics/aind-slims-api@feat-64-mouse-offset",
    "aind-dynamic-foraging-models@git+https://github.com/AllenNeuralDynamics/aind-dynamic-foraging-models@main",
    "aind-behavior-dynamic-foraging@git+https://github.com/AllenNeuralDynamics/Aind.Behavior.DynamicForaging@main",
    "aind-behavior-services==0.9",
    "pynwb >=2, <3",
    "requests >=2, <3",
    "harp-python >=0.3, <2",
    "openpyxl >=3, <4",
    "deepdiff >=8, <9",
    "aind-data-schema==1.1.0",
    "aind-data-schema-models==0.5.6",
    "pydantic==2.10.6",
    "stagewidget==1.0.5.dev0",
    "python-logging-loki >=0.3.1, <2",
    "pykeepass >=4.0.7, <5",
    "pyyaml >=6, <7",
    "pyqtgraph >=0.13, <2"
]

[project.optional-dependencies]
dev = ['black', 'coverage', 'flake8', 'interrogate', 'isort', 'Sphinx', 'furo']

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "foraging_gui.__version__"}

[tool.black]
line-length = 79
target_version = ['py311', 'py312', 'py313']
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | dist
  )/
  | .gitignore
)
'''

[tool.ruff]
line-length = 79
target-version = 'py311'

[tool.ruff.lint]
# pyflakes, pycodestyle, isort
select = ["F", "E", "W", "I", "C90"]
ignore=["E501"]

[tool.coverage.run]
omit = ["*__init__*"]
source = ["src"]

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:", "# pragma: no cover"]
fail_under = 30

[tool.isort]
line_length = 79
profile = "black"

[tool.interrogate]
exclude = ["setup.py", "docs", "build", "tests"]
fail-under = 70